/// Adjusts the spacing for the stack and contained items.
/// @param {String} $spacing - The spacing variant to use.

@mixin stack-spacing($spacing: base) {
  margin-top: -1 * spacing($spacing);
  margin-left: -1 * spacing($spacing);

  > .p_hz {
    margin-top: spacing($spacing);
    margin-left: spacing($spacing);
    max-width: calc(100% - #{spacing($spacing)});
  }
}

.p_b5 {
  @include stack-spacing;
  display: flex;
  flex-wrap: wrap;
  align-items: stretch;
}

.p_mu {
  flex-wrap: nowrap;
}

.p_kt {
  flex-direction: column;
}

.p_y3 {
  @include stack-spacing(none);
}

.p_lk {
  @include stack-spacing(extra-tight);
}

.p_po {
  @include stack-spacing(tight);
}

.p_sn {
  @include stack-spacing(loose);
}

.p_a8 {
  @include stack-spacing(extra-loose);
}

.p_wo {
  justify-content: flex-start;
}

.p_mz {
  justify-content: flex-end;
}

.p_f7 {
  justify-content: center;
}

.p_cz {
  justify-content: space-between;
}

.p_jr > .p_hz {
  flex: 1 1 auto;
}

.p_fi > .p_hz {
  flex: 1 1 auto;

  @supports (min-width: fit-content) {
    flex: 1 0 0%;
    min-width: fit-content;
  }
}

.p_df {
  align-items: flex-start;
}

.p_e6 {
  align-items: flex-end;
}

.p_ft {
  align-items: center;
}

.p_d8 {
  align-items: stretch;
}

.p_xw {
  align-items: baseline;
}

.p_hz {
  flex: 0 0 auto;
  min-width: 0;
}

.p_he {
  flex: 1 1 auto;
}
