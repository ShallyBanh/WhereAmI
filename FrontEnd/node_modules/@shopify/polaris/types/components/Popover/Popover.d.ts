/// <reference types="react" />
import * as React from 'react';
import { PreferredPosition } from '../PositionedOverlay';
import { CloseSource } from './PopoverOverlay';
import Pane from './Pane';
import Section from './Section';
export { CloseSource };
export interface Props {
    /** The content to display inside the popover */
    children?: React.ReactNode;
    /** If true, the popover will stretch to the full width of it's activator */
    fullWidth?: boolean;
    /** The preferred direction to open the popover */
    preferredPosition?: PreferredPosition;
    /** Show or hide the Popover */
    active: boolean;
    /** The element to activate the Popover */
    activator: React.ReactElement<any>;
    /**
     * The element type to wrap the activator with
     * @default 'div'
     */
    activatorWrapper?: string;
    /** Prevent automatic focus of the first field on activation */
    preventAutofocus?: boolean;
    /** Automatically add wrap content in a section */
    sectioned?: boolean;
    /** Callback when popover is closed */
    onClose(source: CloseSource): void;
}
export interface State {
    activatorFocused: boolean;
}
export default class Popover extends React.PureComponent<Props, State> {
    static Pane: typeof Pane;
    static Section: typeof Section;
    state: State;
    private activatorNode;
    private activatorContainer;
    private id;
    componentDidMount(): void;
    componentDidUpdate(): void;
    renderLayer(): JSX.Element | null;
    render(): JSX.Element;
    private setAccessibilityAttributes();
    private handleClose(source);
    private setActivator(node);
}
